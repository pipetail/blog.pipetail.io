<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ssm on pipetail Blog</title>
    <link>https://blog.pipetail.io/tags/ssm/</link>
    <description>Recent content in ssm on pipetail Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright Â© 2020 pipetail. All rights reserved.</copyright>
    <lastBuildDate>Mon, 24 Feb 2020 07:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://blog.pipetail.io/tags/ssm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Systems Manager Session Manager: bye bye bastion hosts!</title>
      <link>https://blog.pipetail.io/posts/2020-02-24-amazon-ssm-session-manager/</link>
      <pubDate>Mon, 24 Feb 2020 07:00:00 +0100</pubDate>
      
      <guid>https://blog.pipetail.io/posts/2020-02-24-amazon-ssm-session-manager/</guid>
      <description>&lt;p&gt;There are customers where public internet access is no go. But
at the same time you need to access your EC2 instances,
right? How would you approach this? Usually, we use bastion hosts,
that&amp;rsquo;s basically a different name for jump host you can use
to access internal resources. In AWS, you don&amp;rsquo;t need to manage
such extra instances and take care of all the low-level configuration.
Instead, you can leverage fully managed Session Manager from the
AWS Systems Manager suite!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>