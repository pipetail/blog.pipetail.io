<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on pipetail Blog</title>
    <link>https://blog.pipetail.io/tags/security/</link>
    <description>Recent content in security on pipetail Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2020 pipetail. All rights reserved.</copyright>
    <lastBuildDate>Thu, 29 Oct 2020 07:00:00 +0100</lastBuildDate><atom:link href="https://blog.pipetail.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>10 most common mistakes using terraform</title>
      <link>https://blog.pipetail.io/posts/2020-10-29-most-common-mistakes-terraform/</link>
      <pubDate>Thu, 29 Oct 2020 07:00:00 +0100</pubDate>
      
      <guid>https://blog.pipetail.io/posts/2020-10-29-most-common-mistakes-terraform/</guid>
      <description>&lt;p&gt;We had the chance to see quite a bit of infrastructures in our years of experience with AWS, GCP and Azure and we see some mistakes being repeated. No shame in that, we’ve done most of these too!&lt;/p&gt;
&lt;p&gt;I’ll try to show the ones we see very often and talk a bit about how to fix them.&lt;/p&gt;
&lt;p&gt;BTW we did a blogpost about &lt;a href=&#34;https://blog.pipetail.io/posts/2020-05-04-most-common-mistakes-k8s/&#34;&gt;&amp;ldquo;10 most common mistakes using kubernetes&amp;rdquo;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10 most common mistakes using kubernetes</title>
      <link>https://blog.pipetail.io/posts/2020-05-04-most-common-mistakes-k8s/</link>
      <pubDate>Mon, 04 May 2020 07:00:00 +0100</pubDate>
      
      <guid>https://blog.pipetail.io/posts/2020-05-04-most-common-mistakes-k8s/</guid>
      <description>&lt;p&gt;We had the chance to see quite a bit of clusters in our years of experience with kubernetes (both managed and unmanaged - on GCP, AWS and Azure), and we see some mistakes being repeated. No shame in that, we’ve done most of these too!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll try to show the ones we see very often and talk a bit about how to fix them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>More EKS tips to make your life easier</title>
      <link>https://blog.pipetail.io/posts/2020-04-13-more-eks-tips/</link>
      <pubDate>Mon, 13 Apr 2020 07:00:00 +0100</pubDate>
      
      <guid>https://blog.pipetail.io/posts/2020-04-13-more-eks-tips/</guid>
      <description>We&amp;rsquo;ve spent most of the last month on implementing EKS. Surprisingly, we&amp;rsquo;re always solving the same concerns no matter what project we&amp;rsquo;re working on. Here&amp;rsquo;s couple of tips for your EKS clusters!
Skip kube2iam, go directly with IAM Roles for Service Accounts Kube2iam is amazing tool. I really like it and it helped me with granular control access in couple of projects. However, there&amp;rsquo;s a better solution that is supported out of the box: IAM roles for services accounts.</description>
    </item>
    
    <item>
      <title>Getting started with PodSecurityPolicy on EKS</title>
      <link>https://blog.pipetail.io/posts/2020-03-15-psp-on-eks/</link>
      <pubDate>Sun, 15 Mar 2020 07:00:00 +0100</pubDate>
      
      <guid>https://blog.pipetail.io/posts/2020-03-15-psp-on-eks/</guid>
      <description>&lt;p&gt;As you might already know, security is not something that a specialized department should
be responsible for. Instead, we all should bear in mind that security matters and build
secure solutions from the very beginning. Today we&amp;rsquo;re gonna talk about some practices
in the world of containerized apps and Kubernetess. So let&amp;rsquo;s say we have some best practices
for the containerized workloads. But how to enforce that? We&amp;rsquo;ll tell you right away.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
